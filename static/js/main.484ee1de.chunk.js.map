{"version":3,"sources":["component/Display.js","component/Button.js","component/ButtonPanel.js","logic/operate.js","component/App.js","logic/calculate.js","logic/isNumber.js","index.js"],"names":["Display","react_default","a","createElement","className","this","props","value","React","Component","Button","handleClick","_this","clickHandler","name","orange","wide","join","trim","onClick","ButtonPanel","buttonName","Button_Button","operate","numberOne","numberTwo","operation","one","Big","two","plus","toString","minus","times","alert","div","Error","concat","App","state","total","next","setState","obj","test","result","includes","parseFloat","calculate","Display_Display","ButtonPanel_ButtonPanel","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.484ee1de.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./Display.css\";\n\nexport default class Display extends React.Component {\n  static propTypes = {\n    value: PropTypes.string,\n  };\n\n  render() {\n    return (\n      <div className=\"component-display\">\n        <div>{this.props.value}</div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Button.css\";\n\nexport default class Button extends React.Component {\n  static propTypes = {\n    name: PropTypes.string,\n    orange: PropTypes.bool,\n    wide: PropTypes.bool,\n    clickHandler: PropTypes.func,\n  };\n\n  handleClick = () => {\n    this.props.clickHandler(this.props.name);\n  };\n\n  render() {\n    const className = [\n      \"component-button\",\n      this.props.orange ? \"orange\" : \"\",\n      this.props.wide ? \"wide\" : \"\",\n    ];\n\n    return (\n      <div className={className.join(\" \").trim()}>\n        <button onClick={this.handleClick}>{this.props.name}</button>\n      </div>\n    );\n  }\n}\n","import Button from \"./Button\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./ButtonPanel.css\";\n\nexport default class ButtonPanel extends React.Component {\n  static propTypes = {\n    clickHandler: PropTypes.func,\n  };\n\n  handleClick = buttonName => {\n    this.props.clickHandler(buttonName);\n  };\n\n  render() {\n    return (\n      <div className=\"component-button-panel\">\n        <div>\n          <Button name=\"AC\" clickHandler={this.handleClick} />\n          <Button name=\"+/-\" clickHandler={this.handleClick} />\n          <Button name=\"%\" clickHandler={this.handleClick} />\n          <Button name=\"รท\" clickHandler={this.handleClick} orange />\n        </div>\n        <div>\n          <Button name=\"7\" clickHandler={this.handleClick} />\n          <Button name=\"8\" clickHandler={this.handleClick} />\n          <Button name=\"9\" clickHandler={this.handleClick} />\n          <Button name=\"x\" clickHandler={this.handleClick} orange />\n        </div>\n        <div>\n          <Button name=\"4\" clickHandler={this.handleClick} />\n          <Button name=\"5\" clickHandler={this.handleClick} />\n          <Button name=\"6\" clickHandler={this.handleClick} />\n          <Button name=\"-\" clickHandler={this.handleClick} orange />\n        </div>\n        <div>\n          <Button name=\"1\" clickHandler={this.handleClick} />\n          <Button name=\"2\" clickHandler={this.handleClick} />\n          <Button name=\"3\" clickHandler={this.handleClick} />\n          <Button name=\"+\" clickHandler={this.handleClick} orange />\n        </div>\n        <div>\n          <Button name=\"0\" clickHandler={this.handleClick} wide />\n          <Button name=\".\" clickHandler={this.handleClick} />\n          <Button name=\"=\" clickHandler={this.handleClick} orange />\n        </div>\n      </div>\n    );\n  }\n}\n","import Big from \"big.js\";\n\nexport default function operate(numberOne, numberTwo, operation) {\n  const one = Big(numberOne || \"0\");\n  const two = Big(numberTwo || (operation === \"รท\" || operation === 'x' ? \"1\": \"0\")); //If dividing or multiplying, then 1 maintains current value in cases of null\n  if (operation === \"+\") {\n    return one.plus(two).toString();\n  }\n  if (operation === \"-\") {\n    return one.minus(two).toString();\n  }\n  if (operation === \"x\") {\n    return one.times(two).toString();\n  }\n  if (operation === \"รท\") {\n    if (two === \"0\") {\n      alert(\"Divide by 0 error\");\n      return \"0\";\n    } else {\n      return one.div(two).toString();\n    }\n  }\n  throw Error(`Unknown operation '${operation}'`);\n}\n","import React from \"react\";\nimport Display from \"./Display\";\nimport ButtonPanel from \"./ButtonPanel\";\nimport calculate from \"../logic/calculate\";\nimport \"./App.css\";\n\nexport default class App extends React.Component {\n  state = {\n    total: null,\n    next: null,\n    operation: null,\n  };\n\n  handleClick = buttonName => {\n    this.setState(calculate(this.state, buttonName));\n  };\n\n  render() {\n    return (\n      <div className=\"component-app\">\n        <Display value={this.state.next || this.state.total || \"0\"} />\n        <ButtonPanel clickHandler={this.handleClick} />\n      </div>\n    );\n  }\n}\n\n","import Big from \"big.js\";\n\nimport operate from \"./operate\";\nimport isNumber from \"./isNumber\";\n\n/**\n * Given a button name and a calculator data object, return an updated\n * calculator data object.\n *\n * Calculator data object contains:\n *   total:String      the running total\n *   next:String       the next number to be operated on with the total\n *   operation:String  +, -, etc.\n */\nexport default function calculate(obj, buttonName) {\n  if (buttonName === \"AC\") {\n    return {\n      total: null,\n      next: null,\n      operation: null,\n    };\n  }\n\n  if (isNumber(buttonName)) {\n    if (buttonName === \"0\" && obj.next === \"0\") {\n      return {};\n    }\n    // If there is an operation, update next\n    if (obj.operation) {\n      if (obj.next) {\n        return { next: obj.next + buttonName };\n      }\n      return { next: buttonName };\n    }\n    // If there is no operation, update next and clear the value\n    if (obj.next) {\n      const next = obj.next === \"0\" ? buttonName : obj.next + buttonName;\n      return {\n        next,\n        total: null,\n      };\n    }\n    return {\n      next: buttonName,\n      total: null,\n    };\n  }\n\n  if (buttonName === \"%\") {\n    if (obj.operation && obj.next) {\n      const result = operate(obj.total, obj.next, obj.operation);\n      return {\n        total: Big(result)\n          .div(Big(\"100\"))\n          .toString(),\n        next: null,\n        operation: null,\n      };\n    }\n    if (obj.next) {\n      return {\n        next: Big(obj.next)\n          .div(Big(\"100\"))\n          .toString(),\n      };\n    }\n    return {};\n  }\n\n  if (buttonName === \".\") {\n    if (obj.next) {\n      // ignore a . if the next number already has one\n      if (obj.next.includes(\".\")) {\n        return {};\n      }\n      return { next: obj.next + \".\" };\n    }\n    return { next: \"0.\" };\n  }\n\n  if (buttonName === \"=\") {\n    if (obj.next && obj.operation) {\n      return {\n        total: operate(obj.total, obj.next, obj.operation),\n        next: null,\n        operation: null,\n      };\n    } else {\n      // '=' with no operation, nothing to do\n      return {};\n    }\n  }\n\n  if (buttonName === \"+/-\") {\n    if (obj.next) {\n      return { next: (-1 * parseFloat(obj.next)).toString() };\n    }\n    if (obj.total) {\n      return { total: (-1 * parseFloat(obj.total)).toString() };\n    }\n    return {};\n  }\n\n  // Button must be an operation\n\n  // When the user presses an operation button without having entered\n  // a number first, do nothing.\n  // if (!obj.next && !obj.total) {\n  //   return {};\n  // }\n\n  // User pressed an operation button and there is an existing operation\n  if (obj.operation) {\n    return {\n      total: operate(obj.total, obj.next, obj.operation),\n      next: null,\n      operation: buttonName,\n    };\n  }\n\n  // no operation yet, but the user typed one\n\n  // The user hasn't typed a number yet, just save the operation\n  if (!obj.next) {\n    return { operation: buttonName };\n  }\n\n  // save the operation and shift 'next' into 'total'\n  return {\n    total: obj.next,\n    next: null,\n    operation: buttonName,\n  };\n}\n","export default function isNumber(item) {\n  return /[0-9]+/.test(item);\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./component/App\";\nimport \"./index.css\";\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}